expression 'PlayersTable (2)' =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\Fantasy2024.xlsx"), null, true),
		    PlayersTable_Table = Source{[Item="PlayersTable",Kind="Table"]}[Data],
		    #"Added Custom" = Table.AddColumn(PlayersTable_Table, "Key", each Text.From([Week])&[Player Name]),
		    #"Merged Queries" = Table.NestedJoin(#"Added Custom", {"Key"}, PlayerPointsStats, {"Key"}, "R_stats", JoinKind.LeftOuter),
		    #"Expanded R_stats" = Table.ExpandTableColumn(#"Merged Queries", "R_stats", {"position_group", "headshot_url", "Each PAT Made", "PAT Attempt", "FG Made (0-39 yards)", "FG Made (40-49 yards)", "FG Made (50-59 yards)", "FG Made (60+ yards)", "Field Goal Attempted", "Passes Caught", "Pass Attempts", "Passing Yards", "TD Pass", "Interceptions Thrown", "Passer Fumble", "2pt Passing Conversion", "Rushing Attempts", "Rushing Yards", "TD Rush", "Rushing Fumble", "2pt Rushing Conversion", "Each Reception", "Receiving Targets", "Receiving Yards", "TD Reception", "Receiving Fumble", "2pt Receiving Conversion"}, {"position_group", "headshot_url", "Each PAT Made", "PAT Attempt", "FG Made (0-39 yards)", "FG Made (40-49 yards)", "FG Made (50-59 yards)", "FG Made (60+ yards)", "Field Goal Attempted", "Passes Caught", "Pass Attempts", "Passing Yards", "TD Pass", "Interceptions Thrown", "Passer Fumble", "2pt Passing Conversion", "Rushing Attempts", "Rushing Yards", "TD Rush", "Rushing Fumble", "2pt Rushing Conversion", "Each Reception", "Receiving Targets", "Receiving Yards", "TD Reception", "Receiving Fumble", "2pt Receiving Conversion"}),
		    #"Filtered Rows" = Table.SelectRows(#"Expanded R_stats", each ([position_group] = null))
		in
		    #"Filtered Rows"
	lineageTag: 0252e745-1bd5-4cc0-8a10-15d4b997724b
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Exception

expression DefenseStats =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\Fantasy2024.xlsx"), null, true),
		    Defense_Table = Source{[Item="Defense",Kind="Table"]}[Data],
		    #"Changed Type" = Table.TransformColumnTypes(Defense_Table,{{"Week", Int64.Type}, {"Fantasy Name", type text}, {"Player Name", type text}, {"Status", type text}, {"Team City", type text}, {"Home", Int64.Type}, {"Ranked Position", type text}, {"Projected Points", type number}, {"Bust", type number}, {"Boom", type number}, {"Each Sack", Int64.Type}, {"Interception Return TD", Int64.Type}, {"Fumble Return TD", type any}, {"Kickoff Return TD", type any}, {"Punt Return TD", type any}, {"Blocked Punt or FG return for TD", type any}, {"Blocked Punt, PAT or FG", type any}, {"Each Interception", Int64.Type}, {"Each Fumble Recovered", Int64.Type}, {"Each Safety", type any}, {"0 points allowed", type any}, {"1-6 points allowed", type any}, {"7-13 points allowed", type any}, {"14-17 points allowed", Int64.Type}, {"28-34 points allowed", Int64.Type}, {"35-45 points allowed", type any}, {"46+ points allowed", type any}, {"Less than 100 total yards allowed", type any}, {"100-199 total yards allowed", type any}, {"200-299 yards allowed", Int64.Type}, {"350-399 yards allowed", type any}, {"400-449 yards allowed", type any}, {"450-499 yards allowed", type any}, {"500-549 yards allowed", type any}, {"550+ yards allowed", type any}, {"2pt Return", type any}, {"1pt Safety", type any}, {"Defense Fumbles Lost", type any}}),
		    #"Unpivoted Columns" = Table.UnpivotOtherColumns(#"Changed Type", {"Week", "Fantasy Name", "Player Name", "Status", "Team City", "Home", "Ranked Position", "Projected Points", "Bust", "Boom"}, "Attribute", "Value"),
		    #"Renamed Columns" = Table.RenameColumns(#"Unpivoted Columns",{{"Ranked Position", "Position"},{"Team City", "NFL_Team"}}),
		    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns",{"Fantasy Name", "Projected Points", "Bust", "Boom", "Home"}),
		    #"Added Custom" = Table.AddColumn(#"Removed Columns", "PlayerKey", each Number.ToText([Week])&[Player Name]),
		    #"Changed Type1" = Table.TransformColumnTypes(#"Added Custom",{{"PlayerKey", type text}, {"Value", Int64.Type}}),
		    #"Merged Queries" = Table.NestedJoin(#"Changed Type1", {"NFL_Team"}, NFLteamsTable, {"team_abbr"}, "NFLteamsTable", JoinKind.LeftOuter),
		    #"Expanded NFLteamsTable" = Table.ExpandTableColumn(#"Merged Queries", "NFLteamsTable", {"team_logo_espn"}, {"NFLteamsTable.team_logo_espn"}),
		    #"Renamed Columns1" = Table.RenameColumns(#"Expanded NFLteamsTable",{{"NFLteamsTable.team_logo_espn", "headshot_url"}})
		in
		    #"Renamed Columns1"
	lineageTag: 8e3408e5-af17-4360-af74-fc755fc3a87d
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'PlayersTable (3)' =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\Fantasy2024.xlsx"), null, true),
		    PlayersTable_Table = Source{[Item="PlayersTable",Kind="Table"]}[Data],
		    #"Added Custom" = Table.AddColumn(PlayersTable_Table, "Key", each Text.From([Week])&[Player Name]),
		    #"Merged Queries" = Table.NestedJoin(#"Added Custom", {"Key"}, PlayerPointsStats, {"Key"}, "R_stats", JoinKind.LeftOuter),
		    #"Expanded R_stats" = Table.ExpandTableColumn(#"Merged Queries", "R_stats", {"position_group", "headshot_url", "Each PAT Made", "PAT Attempt", "FG Made (0-39 yards)", "FG Made (40-49 yards)", "FG Made (50-59 yards)", "FG Made (60+ yards)", "Field Goal Attempted", "Passes Caught", "Pass Attempts", "Passing Yards", "TD Pass", "Interceptions Thrown", "Passer Fumble", "2pt Passing Conversion", "Rushing Attempts", "Rushing Yards", "TD Rush", "Rushing Fumble", "2pt Rushing Conversion", "Each Reception", "Receiving Targets", "Receiving Yards", "TD Reception", "Receiving Fumble", "2pt Receiving Conversion"}, {"position_group", "headshot_url", "Each PAT Made", "PAT Attempt", "FG Made (0-39 yards)", "FG Made (40-49 yards)", "FG Made (50-59 yards)", "FG Made (60+ yards)", "Field Goal Attempted", "Passes Caught", "Pass Attempts", "Passing Yards", "TD Pass", "Interceptions Thrown", "Passer Fumble", "2pt Passing Conversion", "Rushing Attempts", "Rushing Yards", "TD Rush", "Rushing Fumble", "2pt Rushing Conversion", "Each Reception", "Receiving Targets", "Receiving Yards", "TD Reception", "Receiving Fumble", "2pt Receiving Conversion"}),
		    #"Filtered Rows" = Table.SelectRows(#"Expanded R_stats", each ([position_group] = null))
		in
		    #"Filtered Rows"
	lineageTag: faaf3e7e-3e00-4bbd-a669-c9c2f2daf612
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Exception

expression playerpointsnew =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\playerpointsnew.xlsx"), null, true),
		    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Week", Int64.Type}, {"FantasyTeam", type text}, {"Player Name", type text}, {"PlayerID", Int64.Type}, {"Headshot_url", type text}, {"Status", type text}, {"NFL_Team", type text}, {"Opponent", type text}, {"Position", type text}, {"PositionRank", type text}, {"PlayerKey", type text}, {"Bye", Int64.Type}, {"Projected", type number}, {"Actual", type number}, {"Attribute", type text}, {"Value", Int64.Type}}),
		    #"Merged Queries" = Table.NestedJoin(#"Changed Type", {"Attribute"}, PointsMap, {"Stat"}, "PointsMap", JoinKind.LeftOuter),
		    #"Expanded PointsMap" = Table.ExpandTableColumn(#"Merged Queries", "PointsMap", {"Points"}, {"Points"}),
		    #"Renamed Columns1" = Table.RenameColumns(#"Expanded PointsMap",{{"Points", "PointsPerItem"}}),
		    #"Added Custom1" = Table.AddColumn(#"Renamed Columns1", "TotalPoints", each [Value]*[PointsPerItem]),
		    #"Changed Type3" = Table.TransformColumnTypes(#"Added Custom1",{{"TotalPoints", type number}}),
		    #"Rounded Off" = Table.TransformColumns(#"Changed Type3",{{"TotalPoints", each Number.Round(_, 2), type number}})
		in
		    #"Rounded Off"
	lineageTag: 0b5d1193-448c-445c-b8ae-b0655d22e485
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'PlayerPointsStats (2)' =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\playerstats.xlsx"), null, true),
		    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Column1", Int64.Type}, {"player_display_name", type text}, {"position_group", type text}, {"week", Int64.Type}, {"headshot_url", type any}, {"Each PAT Made", type any}, {"PAT Attempt", type any}, {"FG Made (0-39 yards)", type any}, {"FG Made (40-49 yards)", type any}, {"FG Made (50-59 yards)", type any}, {"FG Made (60+ yards)", type any}, {"Field Goal Attempted", type any}, {"NFL_Team", type any}, {"Passes Caught", type any}, {"Pass Attempts", type any}, {"Passing Yards", type any}, {"TD Pass", type any}, {"Interceptions Thrown", type any}, {"Passer Fumble", type any}, {"2pt Passing Conversion", type any}, {"Rushing Attempts", type any}, {"Rushing Yards", type any}, {"TD Rush", type any}, {"Rushing Fumble", type any}, {"2pt Rushing Conversion", type any}, {"Each Reception", type any}, {"Receiving Targets", type any}, {"Receiving Yards", type any}, {"TD Reception", type any}, {"Receiving Fumble", type any}, {"2pt Receiving Conversion", type any}}),
		    #"Replaced Errors1" = Table.ReplaceErrorValues(#"Changed Type", {{"Each PAT Made", null}, {"PAT Attempt", null}, {"FG Made (0-39 yards)", null}, {"FG Made (40-49 yards)", null}, {"FG Made (50-59 yards)", null}, {"FG Made (60+ yards)", null}, {"Field Goal Attempted", null}, {"Passes Caught", null}, {"Pass Attempts", null}, {"Passing Yards", null}, {"TD Pass", null}, {"Interceptions Thrown", null}, {"Passer Fumble", null}, {"2pt Passing Conversion", null}, {"Rushing Attempts", null}, {"Rushing Yards", null}, {"TD Rush", null}, {"Rushing Fumble", null}, {"2pt Rushing Conversion", null}, {"Each Reception", null}, {"Receiving Targets", null}, {"Receiving Yards", null}, {"TD Reception", null}, {"Receiving Fumble", null}, {"2pt Receiving Conversion", null}}),
		    #"Removed Columns" = Table.RemoveColumns(#"Replaced Errors1",{"Column1"}),
		    #"Added Custom2" = Table.AddColumn(#"Removed Columns", "100-199 yard receiving game", each if [Receiving Yards] is null then 0 else if [Receiving Yards]>=100 then 1 else 0),
		    #"Added Custom3" = Table.AddColumn(#"Added Custom2", "100-199 yard rushing game", each if [Rushing Yards] is null then 0 else if [Rushing Yards]>=100 then 1 else 0),
		    #"Unpivoted Other Columns" = Table.UnpivotOtherColumns(#"Added Custom3", {"player_display_name", "position_group", "week", "headshot_url", "NFL_Team"}, "Attribute", "Value"),
		    #"Changed Type1" = Table.TransformColumnTypes(#"Unpivoted Other Columns",{{"Value", Int64.Type}}),
		    #"Filtered Rows" = Table.SelectRows(#"Changed Type1", each ([position_group] <> "DB" and [position_group] <> "DL" and [position_group] <> "LB" and [position_group] <> "OL" and [position_group] <> "SPEC")),
		    #"Renamed Columns" = Table.RenameColumns(#"Filtered Rows",{{"player_display_name", "Player Name"}, {"week", "Week"}, {"position_group", "Position"}}),
		    #"Changed Type2" = Table.TransformColumnTypes(#"Renamed Columns",{{"NFL_Team", type text}, {"headshot_url", type text}}),
		    #"Replaced Value" = Table.ReplaceValue(#"Changed Type2","Michael Pittman","Michael Pittman Jr.",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","Brian Robinson","Brian Robinson Jr.",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1","Deebo Samuel","Deebo Samuel Sr.",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","Travis Etienne","Travis Etienne Jr.",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3","Kenneth Walker","Kenneth Walker III",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4","D.J. Moore","DJ Moore",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5","Devon Achane","De'Von Achane",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value7" = Table.ReplaceValue(#"Replaced Value6","Kaimi Fairbairn","Ka'imi Fairbairn",Replacer.ReplaceText,{"Player Name"}),
		    #"Replaced Value8" = Table.ReplaceValue(#"Replaced Value7","Marvin Harrison","Marvin Harrison Jr.",Replacer.ReplaceText,{"Player Name"}),
		    #"Added Custom" = Table.AddColumn(#"Replaced Value8", "PlayerKey", each Text.From([Week])&[Player Name]),
		    #"Changed Type4" = Table.TransformColumnTypes(#"Added Custom",{{"PlayerKey", type text}}),
		    #"Appended Query" = Table.Combine({#"Changed Type4", DefenseStats}),
		    #"Merged Queries" = Table.NestedJoin(#"Appended Query", {"Attribute"}, PointsMap, {"Stat"}, "PointsMap", JoinKind.LeftOuter),
		    #"Expanded PointsMap" = Table.ExpandTableColumn(#"Merged Queries", "PointsMap", {"Points"}, {"Points"}),
		    #"Renamed Columns1" = Table.RenameColumns(#"Expanded PointsMap",{{"Points", "PointsPerItem"}}),
		    #"Added Custom1" = Table.AddColumn(#"Renamed Columns1", "TotalPoints", each [Value]*[PointsPerItem]),
		    #"Changed Type3" = Table.TransformColumnTypes(#"Added Custom1",{{"TotalPoints", type number}}),
		    #"Rounded Off" = Table.TransformColumns(#"Changed Type3",{{"TotalPoints", each Number.Round(_, 2), type number}})
		in
		    #"Rounded Off"
	lineageTag: 4d83839f-6703-4b38-8619-49bcbdc2a4cd
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression matchups =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\matchups.xlsx"), null, true),
		    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Team", type text}, {"Opponent", type text}, {"Week", Int64.Type}, {"Home_Or_Away", type text}, {"Projected Points", type number}, {"Actual Points", type number}, {"matchup_type", type text}, {"projected_variance", type number}, {"actual_variance", type number}, {"Matchup Header", type text}, {"Result", type text}, {"Number", Int64.Type}, {"MatchupKey", type text}, {"WeeklyMatchupID", Int64.Type}, {"ID", Int64.Type}})
		in
		    #"Changed Type"
	lineageTag: b85f7c57-38c0-4f30-bebe-4feaffc39d78
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'MatchupsTable (2)' =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\Fantasy2024.xlsx"), null, true),
		    MatchupsTable_Table = Source{[Item="MatchupsTable",Kind="Table"]}[Data],
		    #"Changed Type" = Table.TransformColumnTypes(MatchupsTable_Table,{{"ID", Int64.Type}, {"Week", Int64.Type}, {"Team", type text}, {"Opponent", type text}, {"Projected Points Thursday", type number}, {"Projected Win % Thursday", type number}, {"Projected Points Sunday", type any}, {"Projected Win % Sunday", type any}, {"Actual Points", type number}, {"Result", type text}, {"Number", Int64.Type}}),
		    #"Added Custom" = Table.AddColumn(#"Changed Type", "Matchup Header", each if [ID]<7 then [Team]&" vs. "&[Opponent] else [Opponent]&" vs. "&[Team]),
		    #"Inserted Merged Column" = Table.AddColumn(#"Added Custom", "MatchupKey", each Text.Combine({Text.From([Week], "en-US"), [Team]}), type text)
		in
		    #"Inserted Merged Column"
	lineageTag: 234e4105-e453-47aa-b752-53caffa9bc2c
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression PlayerstableNew =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\playerstable.xlsx"), null, true),
		    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Week", Int64.Type}, {"FantasyTeam", type text}, {"NFL_Team", type text}, {"Player Name", type text}, {"Status", type text}, {"Lineup Slot", type text}, {"PlayerKey", type text}, {"MatchupKey", type text}, {"Home", type text}}),
		    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"FantasyTeam", "Fantasy Name"}, {"NFL_Team", "Team City"}})
		in
		    #"Renamed Columns"
	lineageTag: bf2c796c-fa87-4076-8746-740d2bb5a169
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'PlayersTable (4)' =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\Fantasy2024.xlsx"), null, true),
		    PlayersTable_Table = Source{[Item="PlayersTable",Kind="Table"]}[Data],
		    #"Added Custom" = Table.AddColumn(PlayersTable_Table, "PlayerKey", each Text.From([Week])&[Player Name]),
		    #"Removed Columns" = Table.RemoveColumns(#"Added Custom",{"Projected Points", "Bust", "Boom", "Each Sack", "Interception Return TD", "Fumble Return TD", "Kickoff Return TD", "Punt Return TD", "Blocked Punt or FG return for TD", "Blocked Punt, PAT or FG", "Each Interception", "Each Fumble Recovered", "Each Safety", "0 points allowed", "1-6 points allowed", "7-13 points allowed", "14-17 points allowed", "28-34 points allowed", "35-45 points allowed", "46+ points allowed", "Less than 100 total yards allowed", "100-199 total yards allowed", "200-299 yards allowed", "350-399 yards allowed", "400-449 yards allowed", "450-499 yards allowed", "500-549 yards allowed", "550+ yards allowed", "2pt Return", "1pt Safety", "Defense Fumbles Lost"}),
		    #"Changed Type" = Table.TransformColumnTypes(#"Removed Columns",{{"Week", Int64.Type}, {"Fantasy Name", type text}, {"Player Name", type text}, {"Status", type text}, {"Team City", type text}, {"Home", type text}, {"Ranked Position", type text}, {"PlayerKey", type text}}),
		    #"Added Custom1" = Table.AddColumn(#"Changed Type", "MatchupKey", each Text.Combine({Text.From([Week], "en-US"), [Fantasy Name]})),
		    #"Renamed Columns" = Table.RenameColumns(#"Added Custom1",{{"Ranked Position", "Lineup Slot"}})
		in
		    #"Renamed Columns"
	lineageTag: 91410ee0-fdb3-4cc9-8649-93005daca4d1
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression StandingsTable =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\Fantasy2024.xlsx"), null, true),
		    StandingsTable_Table = Source{[Item="StandingsTable",Kind="Table"]}[Data],
		    #"Changed Type" = Table.TransformColumnTypes(StandingsTable_Table,{{"Week", Int64.Type}, {"Team", type text}, {"Division Ranking", Int64.Type}, {"Playoff Ranking", Int64.Type}, {"Record", type text}, {"GB", Int64.Type}, {"Win PCT", Percentage.Type}, {"PF", type number}, {"PA", type number}, {"STRK", type text}, {"Playoff %", Percentage.Type}, {"Playoff Status", type text}})
		in
		    #"Changed Type"
	lineageTag: dad56915-0ef1-46c7-817d-244c8564d722
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'New Matchups' =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\allan\Documents\DS_Projects\Fantasy Football 24\matchups.xlsx"), null, true),
		    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Team", type any}, {"Week", Int64.Type}, {"Home_Or_Away", type text}, {"matchup_type", type text}, {"projected_variance", type number}, {"actual_variance", type number}, {"Opponent", type text}, {"Actual Points", type number}, {"Projected Points", type number}, {"Matchup Header", type text}, {"Result", type text}, {"Number", Int64.Type}, {"MatchupKey", type text}, {"WeeklyMatchupID", Int64.Type}, {"ID", Int64.Type}})
		in
		    #"Changed Type"
	lineageTag: 92f8ed7b-228c-4650-b1e1-a2057f1d7cdf
	queryGroup: archive

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

